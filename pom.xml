<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.6</version>
    <relativePath/>
  </parent>

  <groupId>com.monocept</groupId>
  <artifactId>cyber-security-pipeline-example-project</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>cyber-security-pipeline-example-project</name>
  <description>spring-expression-language-example</description>

  <properties>
    <java.version>17</java.version>
    <dependency-check.version>12.1.6</dependency-check.version>
    <cyclonedx.version>2.8.0</cyclonedx.version>
    <dependency-check.failBuildOnCVSS>0</dependency-check.failBuildOnCVSS>
    <lombok.version>1.18.34</lombok.version>
    <vuln.dir>${project.build.directory}/vuln-libs</vuln.dir>
  </properties>

  <dependencies>
    <!-- Core Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- runtime / dev -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <!-- Tests (JUnit 5 + Spring Test) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- =========================
         Intentionally vulnerable libs (kept off test runtime)
         ========================= -->

    <!-- HIGH: Commons Collections (deserialization) -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
      <scope>test</scope>
    </dependency>

    <!-- MED/LOW: Commons IO 2.4 -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
      <scope>test</scope>
    </dependency>

    <!-- CRITICAL: Log4Shell example -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.14.1</version>
      <scope>test</scope>
    </dependency>

    <!-- IMPORTANT: do NOT add vulnerable jackson-databind here.
         We will fetch it into a folder for OWASP to scan to avoid classpath clashes. -->
  </dependencies>

  <build>
    <plugins>
      <!-- Compiler -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <!-- Spring Boot -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- Keep vulnerable libs OFF the test runtime classpath -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.4</version>
        <configuration>
          <classpathDependencyExcludes>
            <classpathDependencyExclude>commons-collections:commons-collections</classpathDependencyExclude>
            <classpathDependencyExclude>commons-io:commons-io</classpathDependencyExclude>
            <classpathDependencyExclude>org.apache.logging.log4j:log4j-core</classpathDependencyExclude>
            <!-- Do NOT exclude jackson; Bootâ€™s managed Jackson must remain available -->
          </classpathDependencyExcludes>
        </configuration>
      </plugin>

      <!-- Fetch extra vulnerable jars OUTSIDE the project classpath for OWASP scanning -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>fetch-vulnerable-jars</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${vuln.dir}</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
              <artifactItems>
                <!-- Old Jackson kept OUTSIDE the test runtime -->
                <artifactItem>
                  <groupId>com.fasterxml.jackson.core</groupId>
                  <artifactId>jackson-databind</artifactId>
                  <version>2.9.5</version>
                </artifactItem>
                <!-- You can mirror the others too, if you want OWASP to scan both POM + folder -->
                <artifactItem>
                  <groupId>commons-collections</groupId>
                  <artifactId>commons-collections</artifactId>
                  <version>3.2.1</version>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-io</groupId>
                  <artifactId>commons-io</artifactId>
                  <version>2.4</version>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.logging.log4j</groupId>
                  <artifactId>log4j-core</artifactId>
                  <version>2.14.1</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- CycloneDX SBOM -->
      <plugin>
        <groupId>org.cyclonedx</groupId>
        <artifactId>cyclonedx-maven-plugin</artifactId>
        <version>${cyclonedx.version}</version>
        <executions>
          <execution>
            <id>make-sbom</id>
            <phase>package</phase>
            <goals>
              <goal>makeAggregateBom</goal>
            </goals>
            <configuration>
              <schemaVersion>1.5</schemaVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- OWASP Dependency-Check: scan project deps + extra folder -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check.version}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <failBuildOnCVSS>${dependency-check.failBuildOnCVSS}</failBuildOnCVSS>
          <format>ALL</format>

          <!-- Include normal project dependencies -->
          <skipProvidedScope>false</skipProvidedScope>
          <skipSystemScope>true</skipSystemScope>

          <!-- Also scan the copied vulnerable jars -->
          <scanSet>
            <scanFileSet>
              <directory>${vuln.dir}</directory>
              <includes>
                <include>**/*.jar</include>
              </includes>
            </scanFileSet>
          </scanSet>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
